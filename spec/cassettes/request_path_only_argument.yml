---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/popular?api_key=6f974f2eba74445f2915a36f183702b7&language=en-US
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 12 Oct 2022 22:35:06 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 5fd27ad57405b4d88e623e99e69328f4.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 7V1TcNYF_E0U73EuawSa8ADFEabUuznTBeNMq2vpMOti7Kbqc9ae0g==
      Age:
      - '14239'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 13 Oct 2022 02:32:25 GMT
recorded_with: VCR 6.1.0
